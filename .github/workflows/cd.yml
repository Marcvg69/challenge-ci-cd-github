name: CD

on:
  push:
    branches: [ dev, qa, main ]     # auto-deploy by branch
  workflow_dispatch:                 # manual “Run workflow” button
    inputs:
      env:
        description: "Which environment to deploy?"
        type: choice
        options: [dev, qa, prod]
        required: true
        default: dev

jobs:
  deploy-dev:
    # run if push to dev OR manual dispatch choosing dev
    if: |
      github.ref == 'refs/heads/dev' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.env == 'dev')
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4
      - name: Set APP_ENV
        run: echo "APP_ENV=dev" >> $GITHUB_ENV
      - name: Install minimal deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Check secret presence (demo)
        env:
          FAKE_API_KEY: ${{ secrets.FAKE_API_KEY }}
        run: |
          if [ -n "$FAKE_API_KEY" ]; then
            echo "FAKE_API_KEY is configured (length: ${#FAKE_API_KEY})"
          else
            echo "::warning::FAKE_API_KEY not configured for this environment"
          fi
      - name: Package build (simulated)
        run: echo "Dev build at $(date -u)" > build.txt
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dev-${{ github.sha }}
          path: build.txt
      - name: Deploy step (simulated)
        run: echo "🚀 Deployed to 'dev'"

  deploy-qa:
    # run if push to qa OR manual dispatch choosing qa
    if: |
      github.ref == 'refs/heads/qa' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.env == 'qa')
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - uses: actions/checkout@v4
      - name: Set APP_ENV
        run: echo "APP_ENV=qa" >> $GITHUB_ENV
      - name: Install minimal deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Check secret presence (demo)
        env:
          FAKE_API_KEY: ${{ secrets.FAKE_API_KEY }}
        run: |
          if [ -n "$FAKE_API_KEY" ]; then
            echo "FAKE_API_KEY is configured (length: ${#FAKE_API_KEY})"
          else
            echo "::warning::FAKE_API_KEY not configured for this environment"
          fi
      - name: Package build (simulated)
        run: echo "QA build at $(date -u)" > build.txt
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-qa-${{ github.sha }}
          path: build.txt
      - name: Deploy step (simulated)
        run: echo "🚀 Deployed to 'qa'"

  deploy-prod:
    # run if push to main OR manual dispatch choosing prod
    if: |
      github.ref == 'refs/heads/main' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.env == 'prod')
    runs-on: ubuntu-latest
    environment: prod              # must match your Settings → Environments name
    steps:
      - uses: actions/checkout@v4
      - name: Set APP_ENV
        run: echo "APP_ENV=prod" >> $GITHUB_ENV
      - name: Install minimal deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Check secret presence (demo)
        env:
          FAKE_API_KEY: ${{ secrets.FAKE_API_KEY }}
        run: |
          if [ -n "$FAKE_API_KEY" ]; then
            echo "FAKE_API_KEY is configured (length: ${#FAKE_API_KEY})"
          else
            echo "::warning::FAKE_API_KEY not configured for this environment"
          fi
      - name: Package build (simulated)
        run: echo "Prod build at $(date -u)" > build.txt
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-prod-${{ github.sha }}
          path: build.txt
      - name: Deploy step (simulated)
        run: echo "🚀 Deployed to 'prod'"
